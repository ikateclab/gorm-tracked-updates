name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21, 1.22, 1.23, 1.24]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Run tests
      run: go test -ldflags="-checklinkname=0" -v ./...

    - name: Run tests with race detector
      run: go test -ldflags="-checklinkname=0" -race -v ./...

    - name: Run benchmarks
      run: go test -ldflags="-checklinkname=0" -bench=. -benchmem ./...

    - name: Install gorm-gen tool
      run: go install ./cmd/gorm-gen

    - name: Test code generation
      run: |
        cd examples/go-generate
        go generate ./...
        go build ./...

    - name: Verify generated code is up to date
      run: |
        cd examples/go-generate
        go generate ./...
        if ! git diff --exit-code; then
          echo "Generated code is not up to date. Please run 'go generate ./...' and commit the changes."
          exit 1
        fi

    - name: Build CLI tool
      run: go build -ldflags="-checklinkname=0" -v ./cmd/main.go

    - name: Build gorm-gen tool
      run: go build -ldflags="-checklinkname=0" -v ./cmd/gorm-gen

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v4
      with:
        go-version: 1.24
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
